\documentclass[11pt, a4paper]{report}
\usepackage{graphicx, parskip, color, natbib}

% Allowing dots in graphical filenames
\usepackage{grffile}

% While microtype produces nice results,
% change font size by no more than 1%.
\usepackage[stretch = 10]{microtype}

% Might want to mess with page geometry at some point.
% Handy to have just in case.
\usepackage{geometry}

% Using these packages for vector graphics, e.g. the package
% relationship diagram.
\usepackage{pgf, tikz}
\usetikzlibrary{arrows, positioning, fit, shapes}

% Ensuring we get hyperlinks and that natbib plays nicely with it.
\usepackage{hyperref}
\usepackage{hypernat}

% Don't want `Chapter X` to appear
% Instead, `1 Introduction` will appear for example
\usepackage{titlesec}
\titleformat{\chapter}[hang]{\bfseries \huge}{\thechapter}{2pc}{}

% Defining the file/font/lang formats we want.
\usepackage[utf8]{inputenc}
\usepackage[OT1]{fontenc}
\usepackage[english]{babel}

% Requires minted.sty to be in the same directory as this file.
% Also requires pdflatex to be run with -shell-escape, but the makefile
% already does this, use `make all` or `make show`.
% Using the pastie style by default.
\usepackage{minted}
\usemintedstyle{friendly}
\newminted{r}{frame = single, xleftmargin = 0.05\textwidth, xrightmargin = 0.05\textwidth}

% Saving myself from repeatedly having to format text.
\newcommand{\grid}{\textsf{grid}}
\newcommand{\gridSVG}{\textsf{gridSVG}}
\newcommand{\R}{\textsf{R}}

% Renaming the bibliography section with the name `References`.
% Renaming list of listings section with the name `List of Listings`.
\addto{\captionsenglish}{\renewcommand{\bibname}{References}}
\addto{\captionsenglish}{\renewcommand{\listoflistingscaption}{List of Listings}}

% Document properties.
\newcommand{\doctitle}{Web-based Interactive Graphics with gridSVG}
\newcommand{\docauthor}{Simon Potter}
\newcommand{\docdate}{June 27, 2011}
\title{\doctitle{}}
\author{\docauthor{}}
\date{\docdate{}}
\hypersetup{pdftitle = {\doctitle{} | \docauthor{}},
            pdfauthor = {\docauthor{}},
            pdfborder = {0 0 0.5}}

% Avoiding the need to keep loading libraries
<<echo = FALSE, fig = FALSE>>=
library(gridSVG)
library(lattice)
library(ggplot2)
@

\begin{document}

% Title page
\input{./tex/title.tex}

%%%%%%%%%%%%%%%%%%%%%%
% BEGIN FRONT MATTER %
%%%%%%%%%%%%%%%%%%%%%%

\setcounter{page}{1}
\renewcommand{\thepage}{\roman{page}}
\input{./tex/abstract.tex}

\setcounter{page}{2}
\tableofcontents
\listoffigures
\listoflistings
\listoftables
\pagebreak

%%%%%%%%%%%%%%%%%%%%
% END FRONT MATTER %
%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%
% BEGIN MAIN MATTER %
%%%%%%%%%%%%%%%%%%%%%

\setcounter{page}{1}
\renewcommand{\thepage}{\arabic{page}}

\input{./tex/introduction.tex}
\input{./tex/process.tex}

\grid{} blah blah \citep{RGraphics} \R{}. blah blah \citet{SVGSpec} \gridSVG{} blah blah \citet{SVGAnnotation}, blah blah blah \citet{gridSVG}.

Here is an \citet{easelJS} example \citet{oCanvas} in carto \citet{cartoEvent}.

\begin{center}
\begin{tikzpicture}[scale=3, >=triangle 45]
\tikzstyle{every node}=[draw,shape=circle];
\node[rounded rectangle, very thick] (grdev) at (1,1)  {\Large grDevices};
\node[rounded rectangle, very thick] (gr) at (0,2) {\Large graphics};
\node[rounded rectangle, very thick] (grid) at (2,2) {\Large grid};
\node[rounded rectangle, very thick] (svg) at (0,0) {\Large svg};
\node[rounded rectangle, very thick] (pdf) at (1,0) {\Large pdf};
\node[rounded rectangle, very thick] (gridsvg) at (2,0) {\Large gridSVG};
\draw [->, thick] (grdev) -- (svg);
\draw [->, thick] (grdev) -- (pdf);
\draw [->, thick] (gr) -- (grdev);
\draw [->, thick] (grid) -- (grdev);
\draw [->, thick] (grid) -- (gridsvg);
\end{tikzpicture}
\end{center}

\begin{listing}[H]
\begin{rcode}
library(gridSVG)
grid.text("Hello, world!",
          gp = gpar(fontsize = 20, fontface = "Comic Sans MS"))
gridToSVG("fontExample.svg")
\end{rcode}
\caption{An example of an \R{} function.}
\label{lst:square}
\end{listing}

<<echo = FALSE, fig = FALSE>>=
## store current settings, to be restored later
old.settings <- trellis.par.get()

## changing settings to new 'theme'
trellis.par.set(theme = col.whitebg())

## non-trivial strip function
barchart(variety ~ yield | year * site, barley, origin = 0,
         layout = c(4, 3),
         between = list(x = c(0, 0.5, 0)),
         ## par.settings = list(clip = list(strip = "on")),
         strip =
         function(which.given,
                  which.panel,
                  factor.levels,
                  bg = trellis.par.get("strip.background")$col[which.given],
                  ...) {
             axis.line <- trellis.par.get("axis.line")
             pushViewport(viewport(clip = trellis.par.get("clip")$strip))
             if (which.given == 1)
             {
                 grid.rect(x = .26, just = "right",
                           gp = gpar(fill = bg, col = "transparent"))
                 ltext(factor.levels[which.panel[which.given]],
                       x = .24, y = .5, adj = 1)
             }
             if (which.given == 2)
             {
                 grid.rect(x = .26, just = "left",
                           gp = gpar(fill = bg, col = "transparent"))
                 ltext(factor.levels[which.panel[which.given]],
                       x = .28, y = .5, adj = 0)
             }
             upViewport()
             grid.rect(gp =
                       gpar(col = axis.line$col,
                            lty = axis.line$lty,
                            lwd = axis.line$lwd,
                            alpha = axis.line$alpha,
                            fill = "transparent"))
         }, par.strip.text = list(lines = 0.4))

# Restoring old theme
trellis.par.set(theme = old.settings, strict = 2)

# Saving SVG
gridToSVG("test.svg")
@

\begin{figure}[!h]
\centering
\fbox{\includegraphics[width = 0.4\textwidth]{./test.svg.pdf}}
\caption{An example of gridSVG exporting a lattice demo}
\label{fig:latticeDemo10}
\end{figure}

\input{./tex/discussion.tex}
\input{./tex/conclusion.tex}

%%%%%%%%%%%%%%%%%%%
% END MAIN MATTER %
%%%%%%%%%%%%%%%%%%%
 
\appendix
\input{./tex/appendix.tex}
 
%%%%%%%%%%%%%%%%%%%%
% BEGIN REFERENCES %
%%%%%%%%%%%%%%%%%%%%

\clearpage
\phantomsection
\addcontentsline{toc}{chapter}{References}
\input{./tex/references.tex}

\bibliographystyle{apa}
\bibliography{references.bib}

%%%%%%%%%%%%%%%%%%
% END REFERENCES %
%%%%%%%%%%%%%%%%%%

\end{document}
